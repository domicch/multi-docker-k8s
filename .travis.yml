sudo: required
services:
  - docker
env:
  global:
    # This env will associate with Git commit hash and append as version of docker images
    - SHA=$(git rev-parse HEAD)
    # Tell gcloud not to require user input
    - CLOUDSDK_CORE_DISABLE_PROMPTS=1
before_install:
  # download and install Google Cloud SDK. 
  - curl https://sdk.cloud.google.com | bash > /dev/null;
  - source $HOME/google-cloud-sdk/path.bash.inc
  # install kubectl
  - gcloud components update kubectl
  # create account for programmatic access from travis (like creating IAM in AWS)
  # Create the user in Google Cloud console and download multi-docker-k8s-300519-99927a7fc2c9.json file of the credentials
  # The json file is encrypted with Travis CLI tool and uploaded to Travis account
  # this command is generated by travis-cli. Refer to gcp_secret/docker_run.sh for details
  - openssl aes-256-cbc -K $encrypted_155226ccf9c4_key -iv $encrypted_155226ccf9c4_iv -in multi-docker-k8s-300519-99927a7fc2c9.json.enc -out multi-docker-k8s-300519-99927a7fc2c9.json -d
  - gcloud auth activate-service-account --key-file multi-docker-k8s-300519-99927a7fc2c9.json
  - gcloud config set project multi-docker-k8s-300519
  - gcloud config set compute/zone europe-west1-b
  - gcloud container clusters get-credentials multi-docker-cluster
  # login to Docker Hub CLI
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  # run all the tests for the docker images
  - docker build -t domicch/multi_docker_k8s_client_test -f ./client/Dockerfile.dev ./client
  # a kind reminder to create secret for PGPASSPORD in GCP in order for postgres to work. Please refer to gcp_secret/create_secret.sh

script:
  - docker run -e CI=true domicch/multi_docker_k8s_client_test npm run test

deploy:
  provider: script
  script: bash ./deploy.sh
  on:
    branch: master